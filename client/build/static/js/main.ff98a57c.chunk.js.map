{"version":3,"sources":["components/Jumbotron/index.js","components/Nav/index.jsx","components/Grid/index.js","components/SaveResults/index.jsx","utils/API.js","pages/Saved.jsx","components/SearchResult/index.jsx","pages/Search.jsx","pages/NoMatch.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","Nav","href","Container","fluid","concat","Row","_ref2","Col","_ref3","size","float","split","map","join","SaveResults","props","books","book","width","title","onClick","handleDeleteButton","_id","link","target","rel","author","id","key","src","image","alt","description","API","getGoogleSearchBooks","query","axios","get","getBooks","getBook","saveBook","savedBooks","post","deleteBook","delete","Saved","state","then","res","_this","componentDidMount","catch","err","console","log","_this2","this","data","setState","components_Nav","components_Jumbotron","components_SaveResults","Component","SearchResult","event","handleSaveButton","Search","search","message","handleInputChange","value","handleFormSubmit","preventDefault","items","Error","results","result","volumeInfo","authors","imageLinks","thumbnail","infoLink","error","filter","alert","type","onChange","components_SearchResult","NoMatch","role","aria-label","App","BrowserRouter","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ff98a57c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <span className=\"navbar-brand\">\r\n          Google Books\r\n        </span>\r\n        <a className=\"nav-link\" href='/'>Search</a>\r\n        <a className=\"nav-link\" href='/saved'>Saved</a>\r\n\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, float, children }) {\n  return (\n    <div\n      className={(float ? (`float-${float} `) : \"\") + size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\r\n// import \"./style.css\";\r\nimport { Row, Col } from \"../Grid\"\r\n\r\nconst SaveResults = props => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <div>\r\n                    <h3>Search Results</h3>\r\n                    {props.books.map(book => {\r\n                        return (\r\n                            <li className=\"list-group-item\">\r\n                                <Row>\r\n                                    <h3 style={{ width: \"100%\" }}>{book.title}\r\n                                        <div className=\"float-right\">\r\n                                            <button className=\"saveBook btn btn-danger\" onClick={() => props.handleDeleteButton(book._id)}>\r\n                                                Delete Book\r\n                                                    </button>\r\n                                            <a href={book.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                <button className=\"viewBook btn btn-success\">\r\n                                                    View Book\r\n                                                        </button>\r\n                                            </a>\r\n                                        </div>\r\n                                    </h3>\r\n                                </Row>\r\n                                <Row>\r\n                                    <h4 className=\"bookAuthor\">Written By: {book.author.join(\", \")}</h4>\r\n                                </Row>\r\n                                <Row id={book.title + \"Card\"} key={book._id}>\r\n                                    <Col size=\"2\" className=\"bookImage\">\r\n                                        <img src={book.image} alt={book.title} />\r\n                                    </Col>\r\n                                    <Col size=\"1\" className=\"emptyCol\" />\r\n                                    <Col size=\"9\" className=\"bookInfo\">\r\n                                        <Row>\r\n                                            <p className=\"bookDescription\">{book.description}</p>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <br></br>\r\n                                <Row >\r\n                                </Row>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SaveResults","import axios from \"axios\"\r\n\r\nexport default {\r\n    // Get book from google search \r\n    getGoogleSearchBooks: function(query) {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\r\n    },\r\n\r\n    // Gets all books\r\n    getBooks: function() {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n\r\n    // Gets the book with the given id\r\n    getBook: function(id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n    },\r\n\r\n    // Saves a book to the database\r\n    saveBook: function(savedBooks) {\r\n        return axios.post(\"/api/books\", savedBooks);\r\n    },\r\n\r\n    // Deletes the book with the given id\r\n    deleteBook: function(id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Nav from \"../components/Nav\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport SaveResults from \"../components/SaveResults\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Saved extends Component {\r\n    state = {\r\n        books: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.getBooks()\r\n            .then(res => {\r\n                console.log(res.data)\r\n                this.setState({ books: res.data })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleDeleteButton = id => {\r\n        API.deleteBook(id)\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <Nav />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron>\r\n                            <h1>(React) Google Books Search</h1>\r\n                            <h2>Search for and Save Books of Interest</h2>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container fluid>\r\n                <SaveResults \r\n                books = {this.state.books}\r\n                handleDeleteButton={this.handleDeleteButton}\r\n                />\r\n            </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Saved;\r\n","import React from \"react\";\n// import \"./style.css\";\nimport {Row, Col} from \"../Grid\"\n\nconst SearchResult = props => {\n    return (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div>\n                        <h3>Search Results</h3>\n                        {props.books.map(book => {\n                            return (\n                                <li className=\"list-group-item\">\n                                <Row>\n                                    <h3 style={{width: \"100%\"}}>{book.title}\n                                    <div className=\"float-right\">\n                                        <button className=\"saveBook btn btn-primary\" id={book.id} onClick={(event) => props.handleSaveButton(event)}>\n                                            Save Book\n                                                </button>\n                                        <a href={book.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <button className=\"viewBook btn btn-success\">\n                                                View Book\n                                                    </button>\n                                        </a>\n                                    </div>\n                                </h3>\n                                </Row>\n                                <Row>\n                                    <h4 className=\"bookAuthor\">Written By: {book.author ? book.author.join(\", \") : book.author}</h4>\n                                </Row>\n                                <Row id={book.title + \"Card\"} key={book._id}>\n                                    {/* col-3 show image of the book */}\n                                    <Col size=\"2\" className=\"bookImage\">\n                                        <img src={book.image} alt={book.title} />\n                                    </Col>\n                                    <Col size=\"1\" className=\"emptyCol\" />\n                                    {/* col-9 show information of the book */}\n                                    <Col size=\"9\" className=\"bookInfo\">\n                                        <Row>\n                                            <p className=\"bookDescription\">{book.description}</p>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                                <br></br>\n                                <Row >\n                                </Row>\n                            </li>\n                    );\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n}\nexport default SearchResult","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Nav from \"../components/Nav\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport SearchResult from \"../components/SearchResult\"\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        search: \"\",\r\n        books: [],\r\n        message: \"\"\r\n    };\r\n\r\n    //Function to retrieve the value of the search box.\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value });\r\n    }\r\n\r\n    //Submit button function\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        //First, connect to the Goole Books API, providing the values from the search box.\r\n        API.getGoogleSearchBooks(this.state.search)\r\n            .then(res => {\r\n                if (res.data.items === \"error\") {\r\n                    throw new Error(res.data.items);\r\n                }\r\n                else {\r\n                    // Store results array\r\n                    let results = res.data.items;\r\n                    // Map through the array to convert to an array of objects.\r\n                    results = results.map(result => {\r\n                        result = {\r\n                            key: result.id || \"Not available via API\",\r\n                            id: result.id || \"Not available via API\",\r\n                            title: result.volumeInfo.title,\r\n                            author: result.volumeInfo.authors || [\"Author(s) not available via API\"],\r\n                            description: result.volumeInfo.description || \"Description not available via API\",\r\n                            image: result.volumeInfo.imageLinks.thumbnail || \"Image not available via API\",\r\n                            link: result.volumeInfo.infoLink\r\n                        }\r\n                        return result;\r\n                    })\r\n                    // Set the books state to the new array of book objects\r\n                    this.setState({ books: results, error: \"\" })\r\n                }\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    }\r\n\r\n    handleSaveButton = event => {\r\n        event.preventDefault();\r\n        // First, run a filter on all books based on book.id\r\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\r\n        // Save the filtered object, and pass to the saveBook API call.\r\n        savedBooks = savedBooks[0];\r\n        API.saveBook(savedBooks)\r\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <Nav />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron>\r\n                            <h1>(React) Google Books Search</h1>\r\n                            <h2>Search for and Save Books of Interest</h2>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container fluid>\r\n                <form className=\"border\">\r\n                    <Row fluid>\r\n                        <Col size=\"md-12\">\r\n                            <h3>Book Search</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row fluid>\r\n                        <Col size=\"md-12\">\r\n                            <input type=\"text\" className=\"form-control\" onChange={this.handleInputChange}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row fluid>\r\n                        <Col size=\"md-2\" float=\"right my-2\">\r\n                            <button type=\"submit\" className=\"form-control btn btn-primary float-right\" onClick={this.handleFormSubmit}>Search</button>\r\n                        </Col>\r\n                    </Row>\r\n                </form>\r\n            </Container>\r\n            <br/><br/>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <SearchResult books={this.state.books} handleSaveButton={this.handleSaveButton} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Nav from \"../components/Nav\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <div>\n      <Nav />\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>404 Page Not Found</h1>\n              <h1>\n                <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                  🙄\n              </span>\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\nimport NoMatch from \"./pages/NoMatch\";\nfunction App(){\n  return (\n    <Router>\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Search} />\n        <Route exact path=\"/saved/\" component={Saved} />\n        <Route component={NoMatch} />\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}